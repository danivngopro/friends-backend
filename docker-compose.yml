version: "3.3"

services:
  api:
    build:
      context: .
    image: friends-backend
    env_file: docker-compose.env
    environment:
      SERVICES: api
      PORT: 3000
    depends_on:
      - authentication-service
      - nats
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.api-gw.rule=PathPrefix(`/`)"
      - "traefik.http.services.api-gw.loadbalancer.server.port=3000"
    networks:
      - internal
      - default


  user:
    build:
      context: .
    image: friends-backend
    env_file: docker-compose.env
    environment:
      SERVICES: user
    depends_on: 
      - nats
    networks: 
      - internal
      - default

  ad:
    build:
      context: .
    image: friends-backend
    env_file: docker-compose.env
    environment:
      AD_SERVICE_DNS: EXAMPLE
      SERVICES: ad
    depends_on: 
      -  nats
    networks:
      - internal
      - default

  groupId:
    build:
      context: .
    image: friends-backend
    env_file: docker-compose.env
    environment:
      SERVICES: groupId
    depends_on: 
      -  nats
    networks:
      - internal
      - default

  create:
    build:
      context: .
    image: friends-backend
    env_file: docker-compose.env
    environment:
      SERVICES: create
    depends_on:
      - mongo
      - nats
    networks:
      - internal
      - default

  join:
    build:
      context: .
    image: friends-backend
    env_file: docker-compose.env
    environment:
      SERVICES: join
    depends_on:
      - mongo
      - nats
    networks:
      - internal
      - default

  owner:
    build:
      context: .
    image: friends-backend
    env_file: docker-compose.env
    environment:
      SERVICES: owner
    depends_on:
      - outgoing-proxy-service
      - nats
    networks:
      - internal
      - default

  mailer-service:
    container_name: mailer-service
    image: "friends.azurecr.io/mailer-service:latest"
    ports:
      - "8000:8000"
    environment:
      NODE_TLS_REJECT_UNAUTHORIZED: 0
      USE_REDIS: "false"
      USE_AUTH: "false"
      MAIL_HOSTS: "smtp.ethereal.email,smtp.ethereal.email,smtp.ethereal.email,smtp.ethereal.email,smtp.ethereal.email"
      MAIL_USER: selina.mayert92@ethereal.email
      MAIL_PASS: Mdb6ruZm3TPG7Z6Y28
      MAILER_PORT: 25
      HTTP_SERVER_PORT: 8000
    networks:
      - internal
      - default

  mail-builder:
    build:
      context: .
    image: friends-backend
    env_file: docker-compose.env
    environment:
      SERVICES: mail-builder
    depends_on:
      - mailer-service
      - nats
    networks:
      - internal
      - default

  mongo:
    image: mongo:4
    volumes:
      - data:/data/db
    networks:
      - internal
      - default

  nats:
    image: nats:2
    networks:
      - internal
      - default

  traefik:
    image: traefik:v2.1
    command:
      - "--api.insecure=true" # Don't do that in production!
      - "--providers.docker=true"
      - "--providers.docker.exposedbydefault=false"
    ports:
      - 3000:80
      - 3001:8080
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
    networks:
      - internal
      - default

  redis:
    image: redis
    ports:
      - 6379:6379
    networks:
      - internal
      - default

  outgoing-proxy-service:
    image: friends.azurecr.io/spike-proxy-service
    environment:
      MODE: outgoing
      PORT: 8010
      SPIKE_REDIS_HOST: redis://redis
      SPIKE_CLIENT_ID: aXzoxtIFbLVjebyr0~ppCQFxfsv3ZLNkHBrkyfhz
      SPIKE_CLIENT_SECRET: XUneSMVVJhsGfmVPjjGzZgySdH4hmrNKbXGn5Iupjc68R361v_MuRy_XzBOeCnm3dSNWNU_JBsbWUus7UyVXmvj4cO0GW7am11Ex
      SPIKE_URL: https://ospike.northeurope.cloudapp.azure.com/oauAth2/token
      TOKEN_GRANT_TYPE: client_credentials
      USE_REDIS: 'true'
      OUTGOING_SERVICES: '[{"route":"/kartoffel/*","pathRewrite":{"^/kartoffel":""},"target":"http://kartoffel-master.eastus.cloudapp.azure.com:3001","audience":"kartoffel"}]'
    ports:
      - 8010:8000
    networks:
      - internal
      - default


  authentication-service:
    image: friends.azurecr.io/authentication-service
    env_file: docker-compose.env
    ports:
      - '8004:3000'
    networks:
      - internal
      - default
    
      
networks:
  internal:

volumes:
  data:
